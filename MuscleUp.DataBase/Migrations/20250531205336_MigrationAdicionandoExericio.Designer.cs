// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MuscleUp.DataBase;

#nullable disable

namespace MuscleUp.DataBase.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250531205336_MigrationAdicionandoExericio")]
    partial class MigrationAdicionandoExericio
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MuscleUp.Dominio.Academias.Academia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Cep")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Cidade")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Cnpj")
                        .HasMaxLength(18)
                        .HasColumnType("varchar(18)");

                    b.Property<string>("Estado")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Logradouro")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Numero")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.HasKey("Id");

                    b.ToTable("Academias");
                });

            modelBuilder.Entity("MuscleUp.Dominio.Alunos.Aluno", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("Altura")
                        .HasColumnType("int");

                    b.Property<string>("Objetivo")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<int?>("Peso")
                        .HasColumnType("int");

                    b.Property<string>("ProblemasMedicos")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("MuscleUp.Dominio.Exercicios.Exercicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Caminho")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<int>("Dificuldade")
                        .HasColumnType("int");

                    b.Property<int?>("IdAcademia")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("IdAcademia");

                    b.ToTable("Exercicio");
                });

            modelBuilder.Entity("MuscleUp.Dominio.Usuarios.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("IdAcademia")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdAcademia");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("MuscleUp.Dominio.Alunos.Aluno", b =>
                {
                    b.HasOne("MuscleUp.Dominio.Usuarios.Usuario", "Usuario")
                        .WithOne("Aluno")
                        .HasForeignKey("MuscleUp.Dominio.Alunos.Aluno", "IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MuscleUp.Dominio.Exercicios.Exercicio", b =>
                {
                    b.HasOne("MuscleUp.Dominio.Academias.Academia", "Academia")
                        .WithMany("Exercicios")
                        .HasForeignKey("IdAcademia")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Academia");
                });

            modelBuilder.Entity("MuscleUp.Dominio.Usuarios.Usuario", b =>
                {
                    b.HasOne("MuscleUp.Dominio.Academias.Academia", "Academia")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdAcademia")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Academia");
                });

            modelBuilder.Entity("MuscleUp.Dominio.Academias.Academia", b =>
                {
                    b.Navigation("Exercicios");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("MuscleUp.Dominio.Usuarios.Usuario", b =>
                {
                    b.Navigation("Aluno");
                });
#pragma warning restore 612, 618
        }
    }
}
